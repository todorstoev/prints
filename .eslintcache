[{"E:\\Work\\prints\\src\\index.tsx":"1","E:\\Work\\prints\\src\\Root.tsx":"2","E:\\Work\\prints\\src\\theme.ts":"3","E:\\Work\\prints\\src\\App.tsx":"4","E:\\Work\\prints\\src\\shared\\store\\index.ts":"5","E:\\Work\\prints\\src\\components\\ProtectedRoute.tsx":"6","E:\\Work\\prints\\src\\components\\NotificationsHub.tsx":"7","E:\\Work\\prints\\src\\components\\Navigation.tsx":"8","E:\\Work\\prints\\src\\pages\\Home.tsx":"9","E:\\Work\\prints\\src\\pages\\Login.tsx":"10","E:\\Work\\prints\\src\\pages\\ChatRoom.tsx":"11","E:\\Work\\prints\\src\\pages\\Action.tsx":"12","E:\\Work\\prints\\src\\pages\\Profile.tsx":"13","E:\\Work\\prints\\src\\pages\\404.tsx":"14","E:\\Work\\prints\\src\\pages\\RequestPasswordReset.tsx":"15","E:\\Work\\prints\\src\\shared\\services\\firebase.ts":"16","E:\\Work\\prints\\src\\components\\Map.tsx":"17","E:\\Work\\prints\\src\\components\\Signin.tsx":"18","E:\\Work\\prints\\src\\components\\Signup.tsx":"19","E:\\Work\\prints\\src\\components\\ChatRoomDetails.tsx":"20","E:\\Work\\prints\\src\\components\\MessagesList.tsx":"21","E:\\Work\\prints\\src\\components\\Loader.tsx":"22","E:\\Work\\prints\\src\\components\\UserControl.tsx":"23","E:\\Work\\prints\\src\\components\\AddPrinter.tsx":"24","E:\\Work\\prints\\src\\components\\Modal.tsx":"25","E:\\Work\\prints\\src\\shared\\services\\index.ts":"26","E:\\Work\\prints\\src\\shared\\store\\actions\\index.ts":"27","E:\\Work\\prints\\src\\shared\\store\\reducers\\index.ts":"28","E:\\Work\\prints\\src\\shared\\store\\epics\\index.ts":"29","E:\\Work\\prints\\src\\shared\\helpers\\index.ts":"30","E:\\Work\\prints\\src\\components\\ChatDetailsControls.tsx":"31","E:\\Work\\prints\\src\\shared\\hooks\\useConfirm.tsx":"32","E:\\Work\\prints\\src\\shared\\services\\localStorage.ts":"33","E:\\Work\\prints\\src\\shared\\services\\db.ts":"34","E:\\Work\\prints\\src\\shared\\store\\actions\\devices.ts":"35","E:\\Work\\prints\\src\\shared\\store\\actions\\auth.ts":"36","E:\\Work\\prints\\src\\shared\\store\\actions\\errors.ts":"37","E:\\Work\\prints\\src\\shared\\store\\reducers\\auth.ts":"38","E:\\Work\\prints\\src\\shared\\store\\actions\\chat.ts":"39","E:\\Work\\prints\\src\\shared\\store\\actions\\notifications.ts":"40","E:\\Work\\prints\\src\\shared\\store\\reducers\\devices.ts":"41","E:\\Work\\prints\\src\\shared\\store\\reducers\\errors.ts":"42","E:\\Work\\prints\\src\\shared\\store\\reducers\\notifications.ts":"43","E:\\Work\\prints\\src\\shared\\store\\reducers\\chat.ts":"44","E:\\Work\\prints\\src\\shared\\store\\epics\\auth.ts":"45","E:\\Work\\prints\\src\\shared\\store\\epics\\devices.ts":"46","E:\\Work\\prints\\src\\shared\\helpers\\convertGeopoint.ts":"47","E:\\Work\\prints\\src\\shared\\helpers\\fbErrorMessages.ts":"48","E:\\Work\\prints\\src\\shared\\helpers\\remapUser.ts":"49","E:\\Work\\prints\\src\\shared\\helpers\\location.ts":"50","E:\\Work\\prints\\src\\shared\\store\\constants\\index.ts":"51","E:\\Work\\prints\\src\\components\\MapMarker.tsx":"52","E:\\Work\\prints\\src\\shared\\store\\actions\\map.ts":"53","E:\\Work\\prints\\src\\shared\\store\\reducers\\map.ts":"54","E:\\Work\\prints\\src\\shared\\store\\epics\\map.ts":"55","E:\\Work\\prints\\src\\pages\\CookiesPolicy.tsx":"56","E:\\Work\\prints\\src\\pages\\PrivacyPolicy.tsx":"57","E:\\Work\\prints\\src\\components\\MapFilter.tsx":"58"},{"size":280,"mtime":1608231602162,"results":"59","hashOfConfig":"60"},{"size":564,"mtime":1601492761212,"results":"61","hashOfConfig":"60"},{"size":5462,"mtime":1609879498098,"results":"62","hashOfConfig":"60"},{"size":6202,"mtime":1610054629023,"results":"63","hashOfConfig":"60"},{"size":1181,"mtime":1607548256081,"results":"64","hashOfConfig":"60"},{"size":1000,"mtime":1601492916950,"results":"65","hashOfConfig":"60"},{"size":4045,"mtime":1609632503672,"results":"66","hashOfConfig":"60"},{"size":7885,"mtime":1610137184901,"results":"67","hashOfConfig":"60"},{"size":4403,"mtime":1610403035145,"results":"68","hashOfConfig":"60"},{"size":1775,"mtime":1608673823007,"results":"69","hashOfConfig":"60"},{"size":12014,"mtime":1609706609797,"results":"70","hashOfConfig":"60"},{"size":4708,"mtime":1607548256050,"results":"71","hashOfConfig":"60"},{"size":11839,"mtime":1609704857847,"results":"72","hashOfConfig":"60"},{"size":320,"mtime":1609633386204,"results":"73","hashOfConfig":"60"},{"size":2337,"mtime":1610389516725,"results":"74","hashOfConfig":"60"},{"size":965,"mtime":1607704585233,"results":"75","hashOfConfig":"60"},{"size":3070,"mtime":1610140258229,"results":"76","hashOfConfig":"60"},{"size":6470,"mtime":1607703519769,"results":"77","hashOfConfig":"60"},{"size":3469,"mtime":1607700546502,"results":"78","hashOfConfig":"60"},{"size":4840,"mtime":1609705406417,"results":"79","hashOfConfig":"60"},{"size":5152,"mtime":1608243650564,"results":"80","hashOfConfig":"60"},{"size":2393,"mtime":1609633577431,"results":"81","hashOfConfig":"60"},{"size":3904,"mtime":1607548256050,"results":"82","hashOfConfig":"60"},{"size":15237,"mtime":1610390383429,"results":"83","hashOfConfig":"60"},{"size":2126,"mtime":1607556941009,"results":"84","hashOfConfig":"60"},{"size":56,"mtime":1606292276818,"results":"85","hashOfConfig":"60"},{"size":163,"mtime":1608154214760,"results":"86","hashOfConfig":"60"},{"size":497,"mtime":1608154346587,"results":"87","hashOfConfig":"60"},{"size":361,"mtime":1608235895119,"results":"88","hashOfConfig":"60"},{"size":133,"mtime":1606292286451,"results":"89","hashOfConfig":"60"},{"size":970,"mtime":1607548256033,"results":"90","hashOfConfig":"60"},{"size":1005,"mtime":1607548256057,"results":"91","hashOfConfig":"60"},{"size":835,"mtime":1610389523145,"results":"92","hashOfConfig":"60"},{"size":13654,"mtime":1610396877651,"results":"93","hashOfConfig":"60"},{"size":954,"mtime":1607548256074,"results":"94","hashOfConfig":"60"},{"size":1954,"mtime":1609007514290,"results":"95","hashOfConfig":"60"},{"size":420,"mtime":1608154253144,"results":"96","hashOfConfig":"60"},{"size":3404,"mtime":1609007604904,"results":"97","hashOfConfig":"60"},{"size":477,"mtime":1607548256074,"results":"98","hashOfConfig":"60"},{"size":275,"mtime":1603543240152,"results":"99","hashOfConfig":"60"},{"size":1460,"mtime":1607548256082,"results":"100","hashOfConfig":"60"},{"size":671,"mtime":1605998398721,"results":"101","hashOfConfig":"60"},{"size":709,"mtime":1605998398722,"results":"102","hashOfConfig":"60"},{"size":958,"mtime":1608243433485,"results":"103","hashOfConfig":"60"},{"size":4424,"mtime":1610140417224,"results":"104","hashOfConfig":"60"},{"size":2156,"mtime":1607982850235,"results":"105","hashOfConfig":"60"},{"size":230,"mtime":1606428242891,"results":"106","hashOfConfig":"60"},{"size":785,"mtime":1604781236709,"results":"107","hashOfConfig":"60"},{"size":377,"mtime":1608230100730,"results":"108","hashOfConfig":"60"},{"size":686,"mtime":1608062754214,"results":"109","hashOfConfig":"60"},{"size":2541,"mtime":1610137768793,"results":"110","hashOfConfig":"60"},{"size":894,"mtime":1608153437110,"results":"111","hashOfConfig":"60"},{"size":791,"mtime":1610137821582,"results":"112","hashOfConfig":"60"},{"size":1244,"mtime":1610138421864,"results":"113","hashOfConfig":"60"},{"size":578,"mtime":1610396832053,"results":"114","hashOfConfig":"60"},{"size":14873,"mtime":1610054155832,"results":"115","hashOfConfig":"60"},{"size":33669,"mtime":1610054143929,"results":"116","hashOfConfig":"60"},{"size":2935,"mtime":1610401461914,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"hq97y8",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Work\\prints\\src\\index.tsx",[],["236","237"],"E:\\Work\\prints\\src\\Root.tsx",[],"E:\\Work\\prints\\src\\theme.ts",[],"E:\\Work\\prints\\src\\App.tsx",[],"E:\\Work\\prints\\src\\shared\\store\\index.ts",[],"E:\\Work\\prints\\src\\components\\ProtectedRoute.tsx",[],"E:\\Work\\prints\\src\\components\\NotificationsHub.tsx",[],"E:\\Work\\prints\\src\\components\\Navigation.tsx",[],"E:\\Work\\prints\\src\\pages\\Home.tsx",["238","239","240","241"],"E:\\Work\\prints\\src\\pages\\Login.tsx",[],"E:\\Work\\prints\\src\\pages\\ChatRoom.tsx",[],"E:\\Work\\prints\\src\\pages\\Action.tsx",[],"E:\\Work\\prints\\src\\pages\\Profile.tsx",[],"E:\\Work\\prints\\src\\pages\\404.tsx",[],"E:\\Work\\prints\\src\\pages\\RequestPasswordReset.tsx",[],"E:\\Work\\prints\\src\\shared\\services\\firebase.ts",[],"E:\\Work\\prints\\src\\components\\Map.tsx",[],"E:\\Work\\prints\\src\\components\\Signin.tsx",[],"E:\\Work\\prints\\src\\components\\Signup.tsx",[],"E:\\Work\\prints\\src\\components\\ChatRoomDetails.tsx",[],"E:\\Work\\prints\\src\\components\\MessagesList.tsx",[],"E:\\Work\\prints\\src\\components\\Loader.tsx",[],"E:\\Work\\prints\\src\\components\\UserControl.tsx",[],"E:\\Work\\prints\\src\\components\\AddPrinter.tsx",[],"E:\\Work\\prints\\src\\components\\Modal.tsx",[],"E:\\Work\\prints\\src\\shared\\services\\index.ts",[],"E:\\Work\\prints\\src\\shared\\store\\actions\\index.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\index.ts",[],"E:\\Work\\prints\\src\\shared\\store\\epics\\index.ts",[],"E:\\Work\\prints\\src\\shared\\helpers\\index.ts",[],"E:\\Work\\prints\\src\\components\\ChatDetailsControls.tsx",[],"E:\\Work\\prints\\src\\shared\\hooks\\useConfirm.tsx",[],"E:\\Work\\prints\\src\\shared\\services\\localStorage.ts",[],"E:\\Work\\prints\\src\\shared\\services\\db.ts",["242"],"import {\r\n  RoomData,\r\n  Device,\r\n  Printer,\r\n  PrintsUser,\r\n  ChatData,\r\n  Message,\r\n  Coords,\r\n  IMapFilter,\r\n} from '../../types';\r\n\r\nimport {\r\n  db,\r\n  googleProvider,\r\n  facebookProvider,\r\n  myFirebase,\r\n  localPersistance,\r\n  nonePersistance,\r\n} from './firebase';\r\nimport { Observable } from 'rxjs';\r\nimport { cloneDeepWith } from 'lodash';\r\n\r\nimport {\r\n  uniqueNamesGenerator,\r\n  Config,\r\n  adjectives,\r\n  NumberDictionary,\r\n  starWars,\r\n} from 'unique-names-generator';\r\n\r\nimport { fbErrorMessages, remapUser } from '../helpers';\r\n\r\nexport enum ProviderSSO {\r\n  GOOGLE = 'GOOGLE',\r\n  FACEBOOK = 'FACEBOOK',\r\n}\r\n\r\nconst numberDictionary = NumberDictionary.generate({ min: 0, max: 9999 });\r\n\r\nconst customConfigNameGen: Config = {\r\n  dictionaries: [adjectives, starWars, numberDictionary],\r\n  separator: '-',\r\n  length: 3,\r\n};\r\n\r\nexport const registerWithEmail = async (email: string, password: string): Promise<PrintsUser> => {\r\n  let displayName: string = uniqueNamesGenerator(customConfigNameGen)\r\n    .replaceAll(' ', '-')\r\n    .toLowerCase();\r\n  let photoURL = './assets/user-unknown-com.svg';\r\n  let user: any = null;\r\n  let fbUser: firebase.User;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    myFirebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        fbUser = res.user as firebase.User;\r\n\r\n        user = cloneDeepWith(res, (_val, key) => {\r\n          switch (key) {\r\n            case 'photoURL':\r\n              return photoURL;\r\n            case 'displayName':\r\n              return displayName;\r\n            default:\r\n              return undefined;\r\n          }\r\n        });\r\n\r\n        return fbUser?.updateProfile({\r\n          displayName: displayName,\r\n          photoURL: photoURL,\r\n        });\r\n      })\r\n      .then(() => {\r\n        return fbUser.sendEmailVerification();\r\n      })\r\n      .then(() => resolve(remapUser(user)))\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const loginWithSSOStart = (provider: ProviderSSO): boolean => {\r\n  sessionStorage.setItem('3dreact:sso', 'logging');\r\n\r\n  if (provider === ProviderSSO.FACEBOOK) {\r\n    facebookProvider.addScope('public_profile');\r\n    facebookProvider.addScope('email');\r\n\r\n    myFirebase.auth().signInWithRedirect(facebookProvider);\r\n  }\r\n\r\n  if (provider === ProviderSSO.GOOGLE) {\r\n    myFirebase.auth().signInWithRedirect(googleProvider);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const loginWithSsoFinish = (): Promise<PrintsUser> => {\r\n  let fbUser: any;\r\n  return new Promise((resolve, reject) => {\r\n    myFirebase\r\n      .auth()\r\n      .getRedirectResult()\r\n      .then((res) => {\r\n        fbUser = res;\r\n\r\n        return res.user?.updateProfile({\r\n          photoURL:\r\n            (res.additionalUserInfo?.profile as any)?.picture?.data?.url ??\r\n            (res.additionalUserInfo?.profile as any).picture,\r\n        });\r\n      })\r\n      .then(() => resolve(remapUser(fbUser)))\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const loginWithEmail = (\r\n  email: string,\r\n  password: string,\r\n  remember: boolean,\r\n): Promise<PrintsUser> => {\r\n  return new Promise((resolve, reject) => {\r\n    myFirebase\r\n      .auth()\r\n      .setPersistence(remember ? localPersistance : nonePersistance)\r\n      .then(() => myFirebase.auth().signInWithEmailAndPassword(email, password))\r\n      .then((res) => {\r\n        resolve(remapUser(res));\r\n      })\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const getCurrentUser = (): Observable<PrintsUser | null> => {\r\n  return new Observable((subscriber) => {\r\n    myFirebase.auth().onAuthStateChanged({\r\n      next: (user) => {\r\n        subscriber.next(\r\n          user\r\n            ? {\r\n                email: user?.email as string,\r\n                displayName: user?.displayName as string,\r\n                photoURL: user?.photoURL ?? '',\r\n                uid: user?.uid as string,\r\n                emailVerified: user.emailVerified,\r\n              }\r\n            : null,\r\n        );\r\n      },\r\n      error: (error) => subscriber.error(error.message),\r\n      complete: () => subscriber.complete(),\r\n    });\r\n  });\r\n};\r\n\r\nexport const logoutUser = (): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    myFirebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        resolve(true);\r\n      })\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const updateUser = (newData: any): Promise<PrintsUser> => {\r\n  return new Promise((resolve, reject) => {\r\n    const currUser = myFirebase.auth().currentUser;\r\n\r\n    if (newData.email === currUser?.email) {\r\n      const updatedUser = cloneDeepWith(currUser, (_val, key) => {\r\n        if (key === 'displayName') return newData.displayName;\r\n\r\n        return undefined;\r\n      });\r\n\r\n      currUser\r\n        ?.updateProfile({ displayName: newData.displayName })\r\n        .then(() => resolve(updatedUser))\r\n        .catch((e) => reject(fbErrorMessages(e)));\r\n    } else {\r\n      const updatedUser = cloneDeepWith(currUser, (_val, key) => {\r\n        if (key === 'displayName') return newData.displayName;\r\n\r\n        if (key === 'email') return newData.email;\r\n\r\n        return undefined;\r\n      });\r\n\r\n      currUser\r\n        ?.updateProfile({ displayName: newData.displayName })\r\n        .then(() => currUser.updateEmail(newData.email))\r\n        .then(() => resolve(updatedUser))\r\n        .catch((e) => reject(fbErrorMessages(e)));\r\n    }\r\n  });\r\n};\r\n\r\nexport const resetPasswordsRequest = (email: string): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    const auth = myFirebase.auth();\r\n\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => resolve(email))\r\n      .catch((err: any) => reject(fbErrorMessages(err)));\r\n  });\r\n};\r\n\r\nexport const sendVerifyEmail = (): Promise<any> => {\r\n  return new Promise((resolve, reject) => {\r\n    myFirebase\r\n      .auth()\r\n      .currentUser?.sendEmailVerification()\r\n      .then(() => resolve(true))\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const verifyEmail = (actionCode: string): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    const auth = myFirebase.auth();\r\n\r\n    auth\r\n      .applyActionCode(actionCode)\r\n      .then(() => resolve(true))\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const checkActionCodeRecoverEmail = (actionCode: string): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    const auth = myFirebase.auth();\r\n\r\n    auth\r\n      .checkActionCode(actionCode)\r\n      .then(() => resolve(true))\r\n      .catch(() => reject(false));\r\n  });\r\n};\r\n\r\nexport const verifyCodeResetPassword = (actionCode: string): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    const auth = myFirebase.auth();\r\n\r\n    auth\r\n      .verifyPasswordResetCode(actionCode)\r\n      .then(() => resolve(true))\r\n      .catch(() => reject(false));\r\n  });\r\n};\r\n\r\nexport const resetPassword = (actionCode: string, password: string): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    const auth = myFirebase.auth();\r\n    auth\r\n      .confirmPasswordReset(actionCode, password)\r\n      .then(() => resolve(true))\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const deleteUser = (): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    const user = myFirebase.auth().currentUser as firebase.User;\r\n\r\n    user\r\n      .delete()\r\n      .then(() => {\r\n        return deleteUserDevices(user as PrintsUser);\r\n      })\r\n      .then((res) => resolve(res))\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const loadUserDevicesService = (user: PrintsUser): Promise<Device[]> => {\r\n  return new Promise<Device[]>((resolve, reject) => {\r\n    db.collection('devices')\r\n      .where('uid', '==', user.uid)\r\n      .get()\r\n      .then((devices) => {\r\n        const userDevices: Device[] = [];\r\n\r\n        devices.forEach((device) => {\r\n          const uDevice: Device = device.data() as Device;\r\n\r\n          uDevice.id = device.id;\r\n\r\n          userDevices.push(uDevice);\r\n        });\r\n\r\n        resolve(userDevices as Device[]);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const loadDevicesService = ({\r\n  northBound,\r\n  southBound,\r\n}: {\r\n  northBound: Coords;\r\n  southBound: Coords;\r\n}): Promise<Device[]> => {\r\n  return new Promise<Device[]>((resolve, reject) => {\r\n    db.collection('devices')\r\n      .where('location', '<=', northBound)\r\n      .where('location', '>=', southBound)\r\n      .limit(100)\r\n      .get()\r\n      .then((devices) => {\r\n        const viewDevices: Device[] = [];\r\n\r\n        devices.forEach((device) => {\r\n          const uDevice: Device = device.data() as Device;\r\n\r\n          uDevice.id = device.id;\r\n\r\n          viewDevices.push(uDevice);\r\n        });\r\n\r\n        resolve(viewDevices as Device[]);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const loadAllDevicesService = (): Promise<Device[]> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('devices')\r\n      .get()\r\n      .then((devices) => {\r\n        const viewDevices: Device[] = [];\r\n        devices.forEach((device) => {\r\n          const uDevice: Device = device.data() as Device;\r\n\r\n          uDevice.id = device.id;\r\n\r\n          viewDevices.push(uDevice);\r\n        });\r\n\r\n        resolve(viewDevices as Device[]);\r\n      });\r\n  });\r\n};\r\n\r\nexport const addDevice = (device: Device): Promise<Device> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('devices')\r\n      .add(device)\r\n      .then(() => resolve(device))\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const removeDevice = (device: Device): Promise<Device> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('devices')\r\n      .doc(device.id)\r\n      .delete()\r\n      .then(() => resolve(device))\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const getPrinters = (): Promise<Printer[]> => {\r\n  return new Promise<Printer[]>((resolve, reject) => {\r\n    db.collection('printers')\r\n      .get()\r\n      .then((docs) => {\r\n        const printers = docs.docs.map((doc) => doc.data() as Printer);\r\n\r\n        resolve(printers);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const deleteUserDevices = (user: PrintsUser): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    const writeBatch = db.batch();\r\n\r\n    db.collection('devices')\r\n      .where('uid', '==', user.uid)\r\n      .get()\r\n      .then((docs) => {\r\n        docs.forEach((doc) => {\r\n          writeBatch.delete(doc.ref);\r\n        });\r\n\r\n        return writeBatch.commit();\r\n      })\r\n      .then(() => resolve(true))\r\n      .catch((e) => reject(fbErrorMessages(e)));\r\n  });\r\n};\r\n\r\nexport const getUserRooms = (user: PrintsUser): Promise<RoomData[]> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('chats')\r\n      .where('users', 'array-contains', user.uid)\r\n\r\n      .get()\r\n      .then((res) => {\r\n        const docs: RoomData[] = [];\r\n        res.forEach((doc) => docs.push({ roomId: doc.id, data: doc.data() as ChatData }));\r\n\r\n        resolve(docs);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const updateUserRoom = (room: RoomData): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('chats')\r\n      .doc(room.roomId)\r\n      .update(room.data)\r\n      .then((res) => resolve(true))\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nexport const createNewChat = (newChat: RoomData): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('chats')\r\n      .doc(newChat.roomId)\r\n      .set(newChat.data)\r\n      .then((res) => resolve(true))\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const getUserMessages = (selected: string): Promise<Message[]> => {\r\n  return new Promise((resolve, reject) => {\r\n    const doc = db\r\n      .collection('chats')\r\n      .doc(selected)\r\n      .collection('messages')\r\n      .orderBy('time', 'desc')\r\n      .limit(15);\r\n\r\n    doc\r\n      .get()\r\n      .then((res) => {\r\n        const remapedMessages = res.docs.map((doc) => {\r\n          const message: Message = { ...(doc.data() as Message), doc };\r\n\r\n          return message;\r\n        });\r\n\r\n        resolve(remapedMessages);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const loadMoreMessages = (selected: string, lastDoc: any): Promise<Message[]> => {\r\n  return new Promise((resolve, reject) => {\r\n    const topMessages = db\r\n      .collection('chats')\r\n      .doc(selected)\r\n      .collection('messages')\r\n      .orderBy('time', 'desc')\r\n      .startAfter(lastDoc)\r\n      .limit(5);\r\n\r\n    topMessages\r\n      .get()\r\n      .then((res) => {\r\n        const remapedMessages = res.docs.map((doc) => {\r\n          const message: Message = { ...(doc.data() as Message), doc };\r\n\r\n          return message;\r\n        });\r\n\r\n        resolve(remapedMessages);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const getNewMessage = (\r\n  selected: string,\r\n): firebase.firestore.Query<firebase.firestore.DocumentData> => {\r\n  const doc = db\r\n    .collection('chats')\r\n    .doc(selected)\r\n    .collection('messages')\r\n    .orderBy('time', 'desc')\r\n    .limit(1);\r\n\r\n  return doc;\r\n};\r\n\r\nexport const addMessage = (message: Message, selected: string): Promise<boolean> => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('chats')\r\n      .doc(selected)\r\n      .collection('messages')\r\n      .add(message)\r\n      .then(() => resolve(true))\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n","E:\\Work\\prints\\src\\shared\\store\\actions\\devices.ts",[],"E:\\Work\\prints\\src\\shared\\store\\actions\\auth.ts",[],"E:\\Work\\prints\\src\\shared\\store\\actions\\errors.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\auth.ts",[],"E:\\Work\\prints\\src\\shared\\store\\actions\\chat.ts",[],"E:\\Work\\prints\\src\\shared\\store\\actions\\notifications.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\devices.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\errors.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\notifications.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\chat.ts",[],"E:\\Work\\prints\\src\\shared\\store\\epics\\auth.ts",[],"E:\\Work\\prints\\src\\shared\\store\\epics\\devices.ts",[],"E:\\Work\\prints\\src\\shared\\helpers\\convertGeopoint.ts",[],"E:\\Work\\prints\\src\\shared\\helpers\\fbErrorMessages.ts",[],"E:\\Work\\prints\\src\\shared\\helpers\\remapUser.ts",[],"E:\\Work\\prints\\src\\shared\\helpers\\location.ts",[],"E:\\Work\\prints\\src\\shared\\store\\constants\\index.ts",[],"E:\\Work\\prints\\src\\components\\MapMarker.tsx",[],"E:\\Work\\prints\\src\\shared\\store\\actions\\map.ts",[],"E:\\Work\\prints\\src\\shared\\store\\reducers\\map.ts",[],"E:\\Work\\prints\\src\\shared\\store\\epics\\map.ts",["243"],"E:\\Work\\prints\\src\\pages\\CookiesPolicy.tsx",[],"E:\\Work\\prints\\src\\pages\\PrivacyPolicy.tsx",[],"E:\\Work\\prints\\src\\components\\MapFilter.tsx",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"252","line":93,"column":9,"nodeType":"250","messageId":"251","endLine":93,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":106,"column":13,"nodeType":"255","messageId":"256","endLine":106,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":121,"column":6,"nodeType":"259","endLine":121,"endColumn":22,"suggestions":"260"},{"ruleId":"248","severity":1,"message":"261","line":9,"column":3,"nodeType":"250","messageId":"251","endLine":9,"endColumn":13},{"ruleId":"248","severity":1,"message":"262","line":3,"column":25,"nodeType":"250","messageId":"251","endLine":3,"endColumn":30},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'devices' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'mapMarkers'. Either include them or remove the dependency array.","ArrayExpression",["265"],"'IMapFilter' is defined but never used.","'mapTo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},"Update the dependencies array to be: [filter, bounds, mapMarkers, dispatch]",{"range":"268","text":"269"},[3706,3722],"[filter, bounds, mapMarkers, dispatch]"]